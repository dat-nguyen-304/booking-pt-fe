{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tileProps = exports.tileGroupProps = exports.isView = exports.isClassName = exports.isViews = exports.isValue = exports.isMaxDate = exports.isMinDate = exports.isCalendarType = void 0;\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nvar calendarTypes = ['ISO 8601', 'US', 'Arabic', 'Hebrew'];\nvar allViews = ['century', 'decade', 'year', 'month'];\nvar isCalendarType = _propTypes[\"default\"].oneOf(calendarTypes);\nexports.isCalendarType = isCalendarType;\nvar isMinDate = function isMinDate(props, propName, componentName) {\n  var minDate = props[propName];\n  if (minDate) {\n    if (!(minDate instanceof Date)) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(minDate), \"` supplied to `\").concat(componentName, \"`, expected instance of `Date`.\"));\n    }\n    var maxDate = props.maxDate;\n    if (maxDate && minDate > maxDate) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(minDate), \"` supplied to `\").concat(componentName, \"`, minDate cannot be larger than maxDate.\"));\n    }\n  } // Everything is fine\n\n  return null;\n};\nexports.isMinDate = isMinDate;\nvar isMaxDate = function isMaxDate(props, propName, componentName) {\n  var maxDate = props[propName];\n  if (maxDate) {\n    if (!(maxDate instanceof Date)) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(maxDate), \"` supplied to `\").concat(componentName, \"`, expected instance of `Date`.\"));\n    }\n    var minDate = props.minDate;\n    if (minDate && maxDate < minDate) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(maxDate), \"` supplied to `\").concat(componentName, \"`, maxDate cannot be smaller than minDate.\"));\n    }\n  } // Everything is fine\n\n  return null;\n};\nexports.isMaxDate = isMaxDate;\nvar isValue = _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].instanceOf(Date), _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].instanceOf(Date))]);\nexports.isValue = isValue;\nvar isViews = _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].oneOf(allViews));\nexports.isViews = isViews;\nvar isClassName = _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)]);\nexports.isClassName = isClassName;\nvar isView = function isView(props, propName, componentName) {\n  var view = props[propName];\n  var views = props.views;\n  var allowedViews = views || allViews;\n  if (view !== undefined && allowedViews.indexOf(view) === -1) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of value `\").concat(view, \"` supplied to `\").concat(componentName, \"`, expected one of [\").concat(allowedViews.map(function (a) {\n      return \"\\\"\".concat(a, \"\\\"\");\n    }).join(', '), \"].\"));\n  } // Everything is fine\n\n  return null;\n};\nexports.isView = isView;\nisView.isRequired = function (props, propName, componentName) {\n  var view = props[propName];\n  if (!view) {\n    return new Error(\"The prop `\".concat(propName, \"` is marked as required in `\").concat(componentName, \"`, but its value is `\").concat(view, \"`.\"));\n  }\n  return isView(props, propName, componentName);\n};\nvar tileGroupProps = {\n  activeStartDate: _propTypes[\"default\"].instanceOf(Date).isRequired,\n  hover: _propTypes[\"default\"].instanceOf(Date),\n  locale: _propTypes[\"default\"].string,\n  maxDate: isMaxDate,\n  minDate: isMinDate,\n  onClick: _propTypes[\"default\"].func,\n  onMouseOver: _propTypes[\"default\"].func,\n  tileClassName: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, isClassName]),\n  tileContent: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]),\n  value: isValue,\n  valueType: _propTypes[\"default\"].string\n};\nexports.tileGroupProps = tileGroupProps;\nvar tileProps = {\n  activeStartDate: _propTypes[\"default\"].instanceOf(Date).isRequired,\n  classes: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string).isRequired,\n  date: _propTypes[\"default\"].instanceOf(Date).isRequired,\n  locale: _propTypes[\"default\"].string,\n  maxDate: isMaxDate,\n  minDate: isMinDate,\n  onClick: _propTypes[\"default\"].func,\n  onMouseOver: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number])),\n  tileClassName: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, isClassName]),\n  tileContent: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].node]),\n  tileDisabled: _propTypes[\"default\"].func\n};\nexports.tileProps = tileProps;","map":null,"metadata":{},"sourceType":"script"}