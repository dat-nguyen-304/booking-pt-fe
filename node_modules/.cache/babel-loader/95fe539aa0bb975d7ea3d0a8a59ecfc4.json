{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends2 = require('babel-runtime/helpers/extends');\nvar _extends3 = _interopRequireDefault(_extends2);\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\nvar _inherits2 = require('babel-runtime/helpers/inherits');\nvar _inherits3 = _interopRequireDefault(_inherits2);\nvar _classnames = require('classnames');\nvar _classnames2 = _interopRequireDefault(_classnames);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _elementType = require('prop-types-extra/lib/elementType');\nvar _elementType2 = _interopRequireDefault(_elementType);\nvar _bootstrapUtils = require('./utils/bootstrapUtils');\nvar _StyleConfig = require('./utils/StyleConfig');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar propTypes = {\n  componentClass: _elementType2.default,\n  /**\n   * The number of columns you wish to span\n   *\n   * for Extra small devices Phones (<768px)\n   *\n   * class-prefix `col-xs-`\n   */\n  xs: _propTypes2.default.number,\n  /**\n   * The number of columns you wish to span\n   *\n   * for Small devices Tablets (≥768px)\n   *\n   * class-prefix `col-sm-`\n   */\n  sm: _propTypes2.default.number,\n  /**\n   * The number of columns you wish to span\n   *\n   * for Medium devices Desktops (≥992px)\n   *\n   * class-prefix `col-md-`\n   */\n  md: _propTypes2.default.number,\n  /**\n   * The number of columns you wish to span\n   *\n   * for Large devices Desktops (≥1200px)\n   *\n   * class-prefix `col-lg-`\n   */\n  lg: _propTypes2.default.number,\n  /**\n   * Hide column\n   *\n   * on Extra small devices Phones\n   *\n   * adds class `hidden-xs`\n   */\n  xsHidden: _propTypes2.default.bool,\n  /**\n   * Hide column\n   *\n   * on Small devices Tablets\n   *\n   * adds class `hidden-sm`\n   */\n  smHidden: _propTypes2.default.bool,\n  /**\n   * Hide column\n   *\n   * on Medium devices Desktops\n   *\n   * adds class `hidden-md`\n   */\n  mdHidden: _propTypes2.default.bool,\n  /**\n   * Hide column\n   *\n   * on Large devices Desktops\n   *\n   * adds class `hidden-lg`\n   */\n  lgHidden: _propTypes2.default.bool,\n  /**\n   * Move columns to the right\n   *\n   * for Extra small devices Phones\n   *\n   * class-prefix `col-xs-offset-`\n   */\n  xsOffset: _propTypes2.default.number,\n  /**\n   * Move columns to the right\n   *\n   * for Small devices Tablets\n   *\n   * class-prefix `col-sm-offset-`\n   */\n  smOffset: _propTypes2.default.number,\n  /**\n   * Move columns to the right\n   *\n   * for Medium devices Desktops\n   *\n   * class-prefix `col-md-offset-`\n   */\n  mdOffset: _propTypes2.default.number,\n  /**\n   * Move columns to the right\n   *\n   * for Large devices Desktops\n   *\n   * class-prefix `col-lg-offset-`\n   */\n  lgOffset: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Extra small devices Phones\n   *\n   * class-prefix `col-xs-push-`\n   */\n  xsPush: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Small devices Tablets\n   *\n   * class-prefix `col-sm-push-`\n   */\n  smPush: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Medium devices Desktops\n   *\n   * class-prefix `col-md-push-`\n   */\n  mdPush: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the right\n   *\n   * for Large devices Desktops\n   *\n   * class-prefix `col-lg-push-`\n   */\n  lgPush: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Extra small devices Phones\n   *\n   * class-prefix `col-xs-pull-`\n   */\n  xsPull: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Small devices Tablets\n   *\n   * class-prefix `col-sm-pull-`\n   */\n  smPull: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Medium devices Desktops\n   *\n   * class-prefix `col-md-pull-`\n   */\n  mdPull: _propTypes2.default.number,\n  /**\n   * Change the order of grid columns to the left\n   *\n   * for Large devices Desktops\n   *\n   * class-prefix `col-lg-pull-`\n   */\n  lgPull: _propTypes2.default.number\n};\nvar defaultProps = {\n  componentClass: 'div'\n};\nvar Col = function (_React$Component) {\n  (0, _inherits3.default)(Col, _React$Component);\n  function Col() {\n    (0, _classCallCheck3.default)(this, Col);\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n  Col.prototype.render = function render() {\n    var _props = this.props,\n      Component = _props.componentClass,\n      className = _props.className,\n      props = (0, _objectWithoutProperties3.default)(_props, ['componentClass', 'className']);\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n      bsProps = _splitBsProps[0],\n      elementProps = _splitBsProps[1];\n    var classes = [];\n    _StyleConfig.DEVICE_SIZES.forEach(function (size) {\n      function popProp(propSuffix, modifier) {\n        var propName = '' + size + propSuffix;\n        var propValue = elementProps[propName];\n        if (propValue != null) {\n          classes.push((0, _bootstrapUtils.prefix)(bsProps, '' + size + modifier + '-' + propValue));\n        }\n        delete elementProps[propName];\n      }\n      popProp('', '');\n      popProp('Offset', '-offset');\n      popProp('Push', '-push');\n      popProp('Pull', '-pull');\n      var hiddenPropName = size + 'Hidden';\n      if (elementProps[hiddenPropName]) {\n        classes.push('hidden-' + size);\n      }\n      delete elementProps[hiddenPropName];\n    });\n    return _react2.default.createElement(Component, (0, _extends3.default)({}, elementProps, {\n      className: (0, _classnames2.default)(className, classes)\n    }));\n  };\n  return Col;\n}(_react2.default.Component);\nCol.propTypes = propTypes;\nCol.defaultProps = defaultProps;\nexports.default = (0, _bootstrapUtils.bsClass)('col', Col);\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}