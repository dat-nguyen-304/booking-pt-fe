{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends2 = require('babel-runtime/helpers/extends');\nvar _extends3 = _interopRequireDefault(_extends2);\nvar _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');\nvar _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\nvar _inherits2 = require('babel-runtime/helpers/inherits');\nvar _inherits3 = _interopRequireDefault(_inherits2);\nvar _classnames = require('classnames');\nvar _classnames2 = _interopRequireDefault(_classnames);\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _propTypes = require('prop-types');\nvar _propTypes2 = _interopRequireDefault(_propTypes);\nvar _elementType = require('prop-types-extra/lib/elementType');\nvar _elementType2 = _interopRequireDefault(_elementType);\nvar _warning = require('warning');\nvar _warning2 = _interopRequireDefault(_warning);\nvar _FormControlFeedback = require('./FormControlFeedback');\nvar _FormControlFeedback2 = _interopRequireDefault(_FormControlFeedback);\nvar _FormControlStatic = require('./FormControlStatic');\nvar _FormControlStatic2 = _interopRequireDefault(_FormControlStatic);\nvar _bootstrapUtils = require('./utils/bootstrapUtils');\nvar _StyleConfig = require('./utils/StyleConfig');\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar propTypes = {\n  componentClass: _elementType2.default,\n  /**\n   * Only relevant if `componentClass` is `'input'`.\n   */\n  type: _propTypes2.default.string,\n  /**\n   * Uses `controlId` from `<FormGroup>` if not explicitly specified.\n   */\n  id: _propTypes2.default.string,\n  /**\n   * Attaches a ref to the `<input>` element. Only functions can be used here.\n   *\n   * ```js\n   * <FormControl inputRef={ref => { this.input = ref; }} />\n   * ```\n   */\n  inputRef: _propTypes2.default.func\n};\nvar defaultProps = {\n  componentClass: 'input'\n};\nvar contextTypes = {\n  $bs_formGroup: _propTypes2.default.object\n};\nvar FormControl = function (_React$Component) {\n  (0, _inherits3.default)(FormControl, _React$Component);\n  function FormControl() {\n    (0, _classCallCheck3.default)(this, FormControl);\n    return (0, _possibleConstructorReturn3.default)(this, _React$Component.apply(this, arguments));\n  }\n  FormControl.prototype.render = function render() {\n    var formGroup = this.context.$bs_formGroup;\n    var controlId = formGroup && formGroup.controlId;\n    var _props = this.props,\n      Component = _props.componentClass,\n      type = _props.type,\n      _props$id = _props.id,\n      id = _props$id === undefined ? controlId : _props$id,\n      inputRef = _props.inputRef,\n      className = _props.className,\n      bsSize = _props.bsSize,\n      props = (0, _objectWithoutProperties3.default)(_props, ['componentClass', 'type', 'id', 'inputRef', 'className', 'bsSize']);\n    var _splitBsProps = (0, _bootstrapUtils.splitBsProps)(props),\n      bsProps = _splitBsProps[0],\n      elementProps = _splitBsProps[1];\n    process.env.NODE_ENV !== 'production' ? (0, _warning2.default)(controlId == null || id === controlId, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n\n    // input[type=\"file\"] should not have .form-control.\n    var classes = void 0;\n    if (type !== 'file') {\n      classes = (0, _bootstrapUtils.getClassSet)(bsProps);\n    }\n\n    // If user provides a size, make sure to append it to classes as input-\n    // e.g. if bsSize is small, it will append input-sm\n    if (bsSize) {\n      var size = _StyleConfig.SIZE_MAP[bsSize] || bsSize;\n      classes[(0, _bootstrapUtils.prefix)({\n        bsClass: 'input'\n      }, size)] = true;\n    }\n    return _react2.default.createElement(Component, (0, _extends3.default)({}, elementProps, {\n      type: type,\n      id: id,\n      ref: inputRef,\n      className: (0, _classnames2.default)(className, classes)\n    }));\n  };\n  return FormControl;\n}(_react2.default.Component);\nFormControl.propTypes = propTypes;\nFormControl.defaultProps = defaultProps;\nFormControl.contextTypes = contextTypes;\nFormControl.Feedback = _FormControlFeedback2.default;\nFormControl.Static = _FormControlStatic2.default;\nexports.default = (0, _bootstrapUtils.bsClass)('form-control', (0, _bootstrapUtils.bsSizes)([_StyleConfig.Size.SMALL, _StyleConfig.Size.LARGE], FormControl));\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}