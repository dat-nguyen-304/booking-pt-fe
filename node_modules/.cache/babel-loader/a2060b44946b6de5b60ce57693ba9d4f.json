{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\nvar _Divider = _interopRequireDefault(require(\"./Divider\"));\nvar _Hour12Input = _interopRequireDefault(require(\"./TimeInput/Hour12Input\"));\nvar _Hour24Input = _interopRequireDefault(require(\"./TimeInput/Hour24Input\"));\nvar _MinuteInput = _interopRequireDefault(require(\"./TimeInput/MinuteInput\"));\nvar _SecondInput = _interopRequireDefault(require(\"./TimeInput/SecondInput\"));\nvar _NativeInput = _interopRequireDefault(require(\"./TimeInput/NativeInput\"));\nvar _AmPm = _interopRequireDefault(require(\"./TimeInput/AmPm\"));\nvar _dateFormatter = require(\"./shared/dateFormatter\");\nvar _dates = require(\"./shared/dates\");\nvar _propTypes2 = require(\"./shared/propTypes\");\nvar _utils = require(\"./shared/utils\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  }\n}\nvar allViews = ['hour', 'minute', 'second'];\nvar hoursAreDifferent = function hoursAreDifferent(date1, date2) {\n  return date1 && !date2 || !date1 && date2 || date1 && date2 && date1 !== date2 // TODO: Compare 11:22:00 and 11:22 properly\n  ;\n};\n\nvar isValidInput = function isValidInput(element) {\n  return element.tagName === 'INPUT' && element.type === 'number';\n};\nvar findPreviousInput = function findPreviousInput(element) {\n  var previousElement = element;\n  do {\n    previousElement = previousElement.previousElementSibling;\n  } while (previousElement && !isValidInput(previousElement));\n  return previousElement;\n};\nvar findNextInput = function findNextInput(element) {\n  var nextElement = element;\n  do {\n    nextElement = nextElement.nextElementSibling;\n  } while (nextElement && !isValidInput(nextElement));\n  return nextElement;\n};\nvar focus = function focus(element) {\n  return element && element.focus();\n};\nvar _renderCustomInputs = function renderCustomInputs(placeholder, elementFunctions) {\n  var pattern = new RegExp(Object.keys(elementFunctions).map(function (el) {\n    return \"\".concat(el, \"+\");\n  }).join('|'), 'g');\n  var matches = placeholder.match(pattern);\n  return placeholder.split(pattern).reduce(function (arr, element, index) {\n    var divider = element &&\n    // eslint-disable-next-line react/no-array-index-key\n    _react.default.createElement(_Divider.default, {\n      key: \"separator_\".concat(index)\n    }, element);\n    var res = [].concat(_toConsumableArray(arr), [divider]);\n    var currentMatch = matches && matches[index];\n    if (currentMatch) {\n      var renderFunction = elementFunctions[currentMatch] || elementFunctions[Object.keys(elementFunctions).find(function (elementFunction) {\n        return currentMatch.match(elementFunction);\n      })];\n      res.push(renderFunction(currentMatch));\n    }\n    return res;\n  }, []);\n};\nvar TimeInput = /*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(TimeInput, _PureComponent);\n  function TimeInput() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, TimeInput);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TimeInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      amPm: null,\n      hour: null,\n      minute: null,\n      second: null\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClick\", function (event) {\n      if (event.target === event.currentTarget) {\n        // Wrapper was directly clicked\n        var firstInput = event.target.children[1];\n        focus(firstInput);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      switch (event.key) {\n        case 'ArrowLeft':\n          {\n            event.preventDefault();\n            var input = event.target;\n            var previousInput = findPreviousInput(input);\n            focus(previousInput);\n            break;\n          }\n        case 'ArrowRight':\n        case _this.divider:\n          {\n            event.preventDefault();\n            var _input = event.target;\n            var nextInput = findNextInput(_input);\n            focus(nextInput);\n            break;\n          }\n        default:\n      }\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChange\", function (event) {\n      var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n      switch (name) {\n        case 'hour12':\n          {\n            _this.setState(function (prevState) {\n              return {\n                hour: value ? (0, _dates.convert12to24)(parseInt(value, 10), prevState.amPm) : null\n              };\n            }, _this.onChangeExternal);\n            break;\n          }\n        case 'hour24':\n          {\n            _this.setState({\n              hour: value ? parseInt(value, 10) : null\n            }, _this.onChangeExternal);\n            break;\n          }\n        default:\n          {\n            _this.setState(_defineProperty({}, name, value ? parseInt(value, 10) : null), _this.onChangeExternal);\n          }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeNative\", function (event) {\n      var onChange = _this.props.onChange;\n      var value = event.target.value;\n      if (!onChange) {\n        return;\n      }\n      var processedValue = function () {\n        if (!value) {\n          return null;\n        }\n        return value;\n      }();\n      onChange(processedValue, false);\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeAmPm\", function (event) {\n      var value = event.target.value;\n      _this.setState({\n        amPm: value\n      }, _this.onChangeExternal);\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeExternal\", function () {\n      var onChange = _this.props.onChange;\n      if (!onChange) {\n        return;\n      }\n      var formElements = [_this.hour12Input, _this.hour24Input, _this.minuteInput, _this.secondInput, _this.amPmInput].filter(Boolean);\n      var formElementsWithoutSelect = formElements.slice(0, -1);\n      var values = {};\n      formElements.forEach(function (formElement) {\n        values[formElement.name] = formElement.value;\n      });\n      if (formElementsWithoutSelect.every(function (formElement) {\n        return !formElement.value;\n      })) {\n        onChange(null, false);\n      } else if (formElements.every(function (formElement) {\n        return formElement.value && formElement.checkValidity();\n      })) {\n        var hour = \"0\".concat(values.hour24 || (0, _dates.convert12to24)(values.hour12, values.amPm)).slice(-2);\n        var minute = \"0\".concat(values.minute || 0).slice(-2);\n        var second = \"0\".concat(values.second || 0).slice(-2);\n        var timeString = \"\".concat(hour, \":\").concat(minute, \":\").concat(second);\n        var processedValue = _this.getProcessedValue(timeString);\n        onChange(processedValue, false);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderHour12\", function (currentMatch) {\n      var hour = _this.state.hour;\n      if (currentMatch && currentMatch.length > 2) {\n        throw new Error(\"Unsupported token: \".concat(currentMatch));\n      }\n      var showLeadingZeros = currentMatch && currentMatch.length === 2;\n      return _react.default.createElement(_Hour12Input.default, _extends({\n        key: \"hour12\"\n      }, _this.commonInputProps, {\n        showLeadingZeros: showLeadingZeros,\n        value: hour\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderHour24\", function (currentMatch) {\n      var hour = _this.state.hour;\n      if (currentMatch && currentMatch.length > 2) {\n        throw new Error(\"Unsupported token: \".concat(currentMatch));\n      }\n      var showLeadingZeros = currentMatch && currentMatch.length === 2;\n      return _react.default.createElement(_Hour24Input.default, _extends({\n        key: \"hour24\"\n      }, _this.commonInputProps, {\n        showLeadingZeros: showLeadingZeros,\n        value: hour\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderMinute\", function (currentMatch) {\n      var _this$state = _this.state,\n        hour = _this$state.hour,\n        minute = _this$state.minute;\n      if (currentMatch && currentMatch.length > 2) {\n        throw new Error(\"Unsupported token: \".concat(currentMatch));\n      }\n      var showLeadingZeros = currentMatch && currentMatch.length === 2;\n      return _react.default.createElement(_MinuteInput.default, _extends({\n        key: \"minute\"\n      }, _this.commonInputProps, {\n        hour: hour,\n        showLeadingZeros: showLeadingZeros,\n        value: minute\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderSecond\", function (currentMatch) {\n      var _this$state2 = _this.state,\n        hour = _this$state2.hour,\n        minute = _this$state2.minute,\n        second = _this$state2.second;\n      if (currentMatch && currentMatch.length > 2) {\n        throw new Error(\"Unsupported token: \".concat(currentMatch));\n      }\n      var showLeadingZeros = currentMatch ? currentMatch.length === 2 : true;\n      return _react.default.createElement(_SecondInput.default, _extends({\n        key: \"second\"\n      }, _this.commonInputProps, {\n        hour: hour,\n        minute: minute,\n        showLeadingZeros: showLeadingZeros,\n        value: second\n      }));\n    });\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderAmPm\", function () {\n      var amPm = _this.state.amPm;\n      var locale = _this.props.locale;\n      return _react.default.createElement(_AmPm.default, _extends({\n        key: \"ampm\"\n      }, _this.commonInputProps, {\n        locale: locale,\n        onChange: _this.onChangeAmPm,\n        value: amPm\n      }));\n    });\n    return _this;\n  }\n  _createClass(TimeInput, [{\n    key: \"getProcessedValue\",\n    /**\n     * Gets current value in a desired format.\n     */\n    value: function getProcessedValue(value) {\n      var nativeValueParser = this.nativeValueParser;\n      return nativeValueParser(value);\n    }\n    /**\n     * Returns value type that can be returned with currently applied settings.\n     */\n  }, {\n    key: \"renderCustomInputs\",\n    value: function renderCustomInputs() {\n      var placeholder = this.placeholder;\n      var elementFunctions = {\n        h: this.renderHour12,\n        H: this.renderHour24,\n        m: this.renderMinute,\n        s: this.renderSecond,\n        a: this.renderAmPm\n      };\n      return _renderCustomInputs(placeholder, elementFunctions);\n    }\n  }, {\n    key: \"renderNativeInput\",\n    value: function renderNativeInput() {\n      var _this$props = this.props,\n        disabled = _this$props.disabled,\n        maxTime = _this$props.maxTime,\n        minTime = _this$props.minTime,\n        name = _this$props.name,\n        required = _this$props.required,\n        value = _this$props.value;\n      return _react.default.createElement(_NativeInput.default, {\n        key: \"time\",\n        disabled: disabled,\n        maxTime: maxTime,\n        minTime: minTime,\n        name: name,\n        onChange: this.onChangeNative,\n        required: required,\n        value: value,\n        valueType: this.valueType\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = this.props.className;\n      return _react.default.createElement(\"div\", {\n        className: className,\n        onClick: this.onClick,\n        role: \"presentation\"\n      }, this.renderNativeInput(), this.renderCustomInputs());\n    }\n  }, {\n    key: \"formatTime\",\n    get: function get() {\n      var _this$props2 = this.props,\n        locale = _this$props2.locale,\n        maxDetail = _this$props2.maxDetail;\n      var options = {\n        hour: 'numeric'\n      };\n      var level = allViews.indexOf(maxDetail);\n      if (level >= 1) {\n        options.minute = 'numeric';\n      }\n      if (level >= 2) {\n        options.second = 'numeric';\n      }\n      return (0, _dateFormatter.getFormatter)(locale, options);\n    }\n  }, {\n    key: \"formatNumber\",\n    get: function get() {\n      var locale = this.props.locale;\n      var options = {\n        useGrouping: false\n      };\n      return (0, _dateFormatter.getFormatter)(locale, options);\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      var maxDetail = this.props.maxDetail;\n      return maxDetail;\n    }\n  }, {\n    key: \"nativeValueParser\",\n    get: function get() {\n      switch (this.valueType) {\n        case 'hour':\n        case 'minute':\n          return _dates.getHoursMinutes;\n        case 'second':\n          return _dates.getHoursMinutesSeconds;\n        default:\n          throw new Error('Invalid valueType.');\n      }\n    }\n  }, {\n    key: \"divider\",\n    get: function get() {\n      return this.placeholder.match(/[^0-9a-z]/i)[0];\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      var _this$props3 = this.props,\n        format = _this$props3.format,\n        locale = _this$props3.locale;\n      if (format) {\n        return format;\n      }\n      var hour24 = 21;\n      var hour12 = 9;\n      var minute = 13;\n      var second = 14;\n      var date = new Date(2017, 0, 1, hour24, minute, second);\n      return this.formatTime(date).replace(this.formatNumber(hour12), 'h').replace(this.formatNumber(hour24), 'H').replace(this.formatNumber(minute), 'mm').replace(this.formatNumber(second), 'ss').replace(new RegExp((0, _utils.getAmPmLabels)(locale).join('|')), 'a');\n    }\n  }, {\n    key: \"commonInputProps\",\n    get: function get() {\n      var _this2 = this;\n      var _this$props4 = this.props,\n        className = _this$props4.className,\n        disabled = _this$props4.disabled,\n        isClockOpen = _this$props4.isClockOpen,\n        maxTime = _this$props4.maxTime,\n        minTime = _this$props4.minTime,\n        required = _this$props4.required;\n      return {\n        className: className,\n        disabled: disabled,\n        maxTime: maxTime,\n        minTime: minTime,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        placeholder: '--',\n        // This is only for showing validity when editing\n        required: required || isClockOpen,\n        itemRef: function itemRef(ref, name) {\n          // Save a reference to each input field\n          _this2[\"\".concat(name, \"Input\")] = ref;\n        }\n      };\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextState = {};\n      /**\n       * If isClockOpen flag has changed, we have to update it.\n       * It's saved in state purely for use in getDerivedStateFromProps.\n       */\n\n      if (nextProps.isClockOpen !== prevState.isClockOpen) {\n        nextState.isClockOpen = nextProps.isClockOpen;\n      }\n      /**\n       * If the next value is different from the current one  (with an exception of situation in\n       * which values provided are limited by minDate and maxDate so that the dates are the same),\n       * get a new one.\n       */\n\n      var nextValue = nextProps.value;\n      if (\n      // Toggling calendar visibility resets values\n      nextState.isClockOpen // Flag was toggled\n      || hoursAreDifferent(nextValue, prevState.value)) {\n        if (nextValue) {\n          var _convert24to = (0, _dates.convert24to12)((0, _dates.getHours)(nextValue));\n          var _convert24to2 = _slicedToArray(_convert24to, 2);\n          nextState.amPm = _convert24to2[1];\n          nextState.hour = (0, _dates.getHours)(nextValue);\n          nextState.minute = (0, _dates.getMinutes)(nextValue);\n          nextState.second = (0, _dates.getSeconds)(nextValue);\n        } else {\n          nextState.amPm = null;\n          nextState.hour = null;\n          nextState.minute = null;\n          nextState.second = null;\n        }\n        nextState.value = nextValue;\n      }\n      return nextState;\n    }\n  }]);\n  return TimeInput;\n}(_react.PureComponent);\nexports.default = TimeInput;\nTimeInput.defaultProps = {\n  maxDetail: 'minute',\n  name: 'time'\n};\nTimeInput.propTypes = {\n  className: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool,\n  isClockOpen: _propTypes.default.bool,\n  locale: _propTypes.default.string,\n  maxDetail: _propTypes.default.oneOf(allViews),\n  maxTime: _propTypes2.isTime,\n  minTime: _propTypes2.isTime,\n  name: _propTypes.default.string,\n  onChange: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  value: _propTypes.default.oneOfType([_propTypes2.isTime, _propTypes.default.instanceOf(Date)])\n};\n(0, _reactLifecyclesCompat.polyfill)(TimeInput);","map":null,"metadata":{},"sourceType":"script"}