{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nexports.default = createUncontrollable;\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _invariant = require('invariant');\nvar _invariant2 = _interopRequireDefault(_invariant);\nvar _utils = require('./utils');\nvar utils = _interopRequireWildcard(_utils);\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n    newObj.default = obj;\n    return newObj;\n  }\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nfunction createUncontrollable(mixin, set) {\n  return uncontrollable;\n  function uncontrollable(Component, controlledValues) {\n    var _class, _temp;\n    var methods = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    var displayName = Component.displayName || Component.name || 'Component',\n      basePropTypes = utils.getType(Component).propTypes,\n      isCompositeComponent = utils.isReactComponent(Component),\n      controlledProps = Object.keys(controlledValues),\n      propTypes;\n    var OMIT_PROPS = ['valueLink', 'checkedLink'].concat(controlledProps.map(utils.defaultKey));\n    propTypes = utils.uncontrolledPropTypes(controlledValues, basePropTypes, displayName);\n    (0, _invariant2.default)(isCompositeComponent || !methods.length, '[uncontrollable] stateless function components cannot pass through methods ' + 'because they have no associated instances. Check component: ' + displayName + ', ' + 'attempting to pass through methods: ' + methods.join(', '));\n    methods = utils.transform(methods, function (obj, method) {\n      obj[method] = function () {\n        var _refs$inner;\n        return (_refs$inner = this.refs.inner)[method].apply(_refs$inner, arguments);\n      };\n    }, {});\n    var component = (_temp = _class = function (_React$Component) {\n      _inherits(component, _React$Component);\n      function component() {\n        _classCallCheck(this, component);\n        return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n      }\n      component.prototype.shouldComponentUpdate = function shouldComponentUpdate() {\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        return !mixin.shouldComponentUpdate || mixin.shouldComponentUpdate.apply(this, args);\n      };\n      component.prototype.componentWillMount = function componentWillMount() {\n        var _this2 = this;\n        var props = this.props;\n        this._values = {};\n        controlledProps.forEach(function (key) {\n          _this2._values[key] = props[utils.defaultKey(key)];\n        });\n      };\n\n      /**\n       * If a prop switches from controlled to Uncontrolled\n       * reset its value to the defaultValue\n       */\n\n      component.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n        var _this3 = this;\n        var props = this.props;\n        if (mixin.componentWillReceiveProps) {\n          mixin.componentWillReceiveProps.call(this, nextProps);\n        }\n        controlledProps.forEach(function (key) {\n          if (utils.getValue(nextProps, key) === undefined && utils.getValue(props, key) !== undefined) {\n            _this3._values[key] = nextProps[utils.defaultKey(key)];\n          }\n        });\n      };\n      component.prototype.componentWillUnmount = function componentWillUnmount() {\n        this.unmounted = true;\n      };\n      component.prototype.getControlledInstance = function getControlledInstance() {\n        return this.refs.inner;\n      };\n      component.prototype.render = function render() {\n        var _this4 = this;\n        var newProps = {},\n          props = omitProps(this.props);\n        utils.each(controlledValues, function (handle, propName) {\n          var linkPropName = utils.getLinkName(propName),\n            prop = _this4.props[propName];\n          if (linkPropName && !isProp(_this4.props, propName) && isProp(_this4.props, linkPropName)) {\n            prop = _this4.props[linkPropName].value;\n          }\n          newProps[propName] = prop !== undefined ? prop : _this4._values[propName];\n          newProps[handle] = setAndNotify.bind(_this4, propName);\n        });\n        newProps = _extends({}, props, newProps, {\n          ref: isCompositeComponent ? 'inner' : null\n        });\n        return _react2.default.createElement(Component, newProps);\n      };\n      return component;\n    }(_react2.default.Component), _class.displayName = 'Uncontrolled(' + displayName + ')', _class.propTypes = propTypes, _temp);\n    _extends(component.prototype, methods);\n    component.ControlledComponent = Component;\n\n    /**\n     * useful when wrapping a Component and you want to control\n     * everything\n     */\n    component.deferControlTo = function (newComponent) {\n      var additions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var nextMethods = arguments[2];\n      return uncontrollable(newComponent, _extends({}, controlledValues, additions), nextMethods);\n    };\n    return component;\n    function setAndNotify(propName, value) {\n      var linkName = utils.getLinkName(propName),\n        handler = this.props[controlledValues[propName]];\n      if (linkName && isProp(this.props, linkName) && !handler) {\n        handler = this.props[linkName].requestChange;\n      }\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n      set(this, propName, handler, value, args);\n    }\n    function isProp(props, prop) {\n      return props[prop] !== undefined;\n    }\n    function omitProps(props) {\n      var result = {};\n      utils.each(props, function (value, key) {\n        if (OMIT_PROPS.indexOf(key) === -1) result[key] = value;\n      });\n      return result;\n    }\n  }\n}\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}