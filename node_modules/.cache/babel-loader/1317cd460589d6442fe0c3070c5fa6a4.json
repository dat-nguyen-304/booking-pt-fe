{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.paginateData = exports.filterData = exports.sortData = exports.isPropFilterable = exports.getLastChildren = undefined;\nvar _react = require('react');\nvar _react2 = _interopRequireDefault(_react);\nvar _filter2 = require('lodash/filter');\nvar _filter3 = _interopRequireDefault(_filter2);\nvar _orderBy2 = require('lodash/orderBy');\nvar _orderBy3 = _interopRequireDefault(_orderBy2);\nvar _includes2 = require('lodash/includes');\nvar _includes3 = _interopRequireDefault(_includes2);\nvar _keys2 = require('lodash/keys');\nvar _keys3 = _interopRequireDefault(_keys2);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar getLastChildren = function getLastChildren(reactElement) {\n  var isReactElement = _react2.default.isValidElement(reactElement);\n  return isReactElement ? getLastChildren(reactElement.props.children) : reactElement;\n};\nvar isPropFilterable = function isPropFilterable(tableHeader, prop) {\n  var i = 0;\n  var found = false;\n  var isFilterable = false;\n  while (!found && i < tableHeader.length) {\n    if (tableHeader[i].prop === prop) {\n      found = true;\n      if (tableHeader[i].filterable === true) {\n        isFilterable = true;\n      }\n    }\n    i += 1;\n  }\n  return isFilterable;\n};\nvar sortData = function sortData(sortedProp, onSort, data) {\n  var sortedData = data;\n  if (sortedProp !== {}) {\n    var prop = sortedProp.prop,\n      isAscending = sortedProp.isAscending;\n    var sortMultiplier = isAscending ? 'asc' : 'desc';\n    sortedData = (0, _orderBy3.default)(sortedData, function (value) {\n      var quantifiedValue = getLastChildren(value[prop]);\n\n      // if onSort use the onSort[prop] function\n      // this is a handler for custom objects, such as Date\n      if (onSort && typeof onSort[prop] === 'function') {\n        quantifiedValue = onSort[prop](quantifiedValue);\n      }\n      return quantifiedValue;\n    }, sortMultiplier);\n  }\n  return sortedData;\n};\nvar filterData = function filterData(tableHeader, filterText, onFilter, data) {\n  var filteredData = data;\n  if (filterText !== '') {\n    filteredData = (0, _filter3.default)(filteredData, function (element) {\n      var isElementIncluded = false;\n      var i = 0;\n      var elementProps = (0, _keys3.default)(element);\n      var elementPropLength = elementProps.length;\n      while (!isElementIncluded && i < elementPropLength) {\n        var prop = elementProps[i];\n        if (isPropFilterable(tableHeader, prop)) {\n          var columnValue = element[prop];\n\n          // Get last children and fill columnValue with empty string if undefined\n          columnValue = getLastChildren(columnValue) || '';\n          if (onFilter && typeof onFilter[prop] === 'function') {\n            columnValue = onFilter[prop](columnValue);\n          } else if (typeof columnValue !== 'string') {\n            // Convert to string if it is not a string\n            columnValue = columnValue.toString();\n          }\n          columnValue = columnValue.toLowerCase();\n\n          // If filterText is string/substring of columnValue\n          isElementIncluded = (0, _includes3.default)(columnValue, filterText.toLowerCase());\n        }\n        i += 1;\n      }\n      return isElementIncluded;\n    });\n  }\n  return filteredData;\n};\nvar paginateData = function paginateData(rowsPerPage, currentPage, data) {\n  var paginatedData = data;\n  if (rowsPerPage !== undefined) {\n    var startRow = (currentPage - 1) * rowsPerPage;\n    var endRow = currentPage * rowsPerPage;\n    paginatedData = data.slice(startRow, endRow);\n  }\n  return paginatedData;\n};\nexports.getLastChildren = getLastChildren;\nexports.isPropFilterable = isPropFilterable;\nexports.sortData = sortData;\nexports.filterData = filterData;\nexports.paginateData = paginateData;","map":null,"metadata":{},"sourceType":"script"}