{"ast":null,"code":"// ##############################\n// // // Function that converts a hex color number to a RGB color number\n// #############################\n/*function hexToRGB(hex, alpha) {\r\n    var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n    if (alpha) {\r\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n}*/\n\n// ##############################\n// // // general variables for charts\n// #############################\nvar primaryColor = \"#26a69a\";\nvar accentColor = \"#ff8a65\";\nvar chartColor = \"#FFFFFF\";\n\n// General configuration for the charts with Line gradientStroke\nvar gradientChartOptionsConfiguration = {\n  maintainAspectRatio: false,\n  legend: {\n    display: true\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [{\n      display: 1,\n      ticks: {\n        display: true\n      },\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0.01)\",\n        drawBorder: false\n      }\n    }],\n    xAxes: [{\n      display: 1,\n      ticks: {\n        display: true\n      },\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0.01)\",\n        zeroLineColor: \"transparent\",\n        drawTicks: false,\n        display: true,\n        drawBorder: false\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  }\n};\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\n  maintainAspectRatio: false,\n  legend: {\n    display: false\n  },\n  tooltips: {\n    bodySpacing: 4,\n    mode: \"nearest\",\n    intersect: 0,\n    position: \"nearest\",\n    xPadding: 10,\n    yPadding: 10,\n    caretPadding: 10\n  },\n  responsive: 1,\n  scales: {\n    yAxes: [{\n      categoryPercentage: 0.8,\n      barPercentage: 0.6,\n      maxBarThickness: 12,\n      display: 1,\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0.01)\"\n      },\n      ticks: {\n        display: true\n      }\n    }],\n    xAxes: [{\n      display: 0,\n      ticks: {\n        display: false\n      },\n      gridLines: {\n        color: \"rgba(0, 0, 0, 0.01)\",\n        zeroLineColor: \"transparent\",\n        drawTicks: false,\n        display: false,\n        drawBorder: false\n      }\n    }]\n  },\n  layout: {\n    padding: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  }\n};\n\n// ##############################\n// // // Dashboard view - Panel chart\n// #############################\n\nvar dashboardPanelChart = {\n  data: function data(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var chartColor = \"#FFFFFF\";\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, '#80b6f4');\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\n    return {\n      labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\n      datasets: [{\n        label: \"Data\",\n        borderColor: chartColor,\n        pointBorderColor: chartColor,\n        pointBackgroundColor: \"#2c2c2c\",\n        pointHoverBackgroundColor: \"#2c2c2c\",\n        pointHoverBorderColor: chartColor,\n        pointBorderWidth: 1,\n        pointHoverRadius: 7,\n        pointHoverBorderWidth: 2,\n        pointRadius: 5,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderWidth: 2,\n        data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95]\n      }]\n    };\n  },\n  options: {\n    layout: {\n      padding: {\n        left: 20,\n        right: 20,\n        top: 0,\n        bottom: 0\n      }\n    },\n    maintainAspectRatio: false,\n    tooltips: {\n      backgroundColor: '#fff',\n      titleFontColor: '#333',\n      bodyFontColor: '#666',\n      bodySpacing: 4,\n      xPadding: 12,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\"\n    },\n    legend: {\n      position: \"bottom\",\n      fillStyle: \"#FFF\",\n      display: false\n    },\n    scales: {\n      yAxes: [{\n        ticks: {\n          fontColor: \"rgba(255,255,255,0.4)\",\n          fontStyle: \"bold\",\n          beginAtZero: true,\n          maxTicksLimit: 5,\n          padding: 10\n        },\n        gridLines: {\n          drawTicks: true,\n          drawBorder: false,\n          display: true,\n          color: \"rgba(255,255,255,0.1)\",\n          zeroLineColor: \"transparent\"\n        }\n      }],\n      xAxes: [{\n        gridLines: {\n          display: false,\n          color: \"rgba(255,255,255,0.1)\"\n        },\n        ticks: {\n          padding: 10,\n          fontColor: \"rgba(255,255,255,0.4)\",\n          fontStyle: \"bold\"\n        }\n      }]\n    }\n  }\n};\n\n// ##############################\n// // // Dashboard view - Shipped Products - Card\n// #############################\n\nvar dashboardShippedProductsChart = {\n  data: function data(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, 'rgba(255, 138, 101,1)');\n    gradientStroke.addColorStop(1, chartColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(255, 138, 101, 1)\");\n    gradientFill.addColorStop(1, \"rgba(255, 138, 101, 1)\");\n    return {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Students\",\n        borderColor: \"rgba(255, 138, 101,1)\",\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: \"rgba(255, 138, 101,1)\",\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderWidth: 2,\n        data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630]\n      }]\n    };\n  },\n  options: gradientChartOptionsConfiguration\n};\n\n// ##############################\n// // // Dashboard view - All Products - Card\n// #############################\n\nvar dashboardAllProductsChart = {\n  data: function data(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\n    gradientStroke.addColorStop(0, '#18ce0f');\n    gradientStroke.addColorStop(1, primaryColor);\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, \"rgba(233, 30, 99, 0)\");\n    gradientFill.addColorStop(1, \"rgba(233, 30, 99, 0)\");\n    return {\n      labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\n      datasets: [{\n        label: \"Library Assets\",\n        borderColor: primaryColor,\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: primaryColor,\n        pointBorderWidth: 2,\n        pointHoverRadius: 6,\n        pointHoverBorderWidth: 4,\n        pointRadius: 6,\n        fill: true,\n        backgroundColor: gradientFill,\n        borderWidth: 2,\n        data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\n      }]\n    };\n  },\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid\n};\n\n// ##############################\n// // // Dashboard view - Bar Chart - Card\n// #############################\n\nvar dashboard24HoursPerformanceChart = {\n  data: function data(canvas) {\n    var ctx = canvas.getContext(\"2d\");\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\n    gradientFill.addColorStop(0, accentColor);\n    gradientFill.addColorStop(1, accentColor);\n    return {\n      labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      datasets: [{\n        label: \"Professors\",\n        backgroundColor: gradientFill,\n        borderColor: accentColor,\n        pointBorderColor: \"#FFF\",\n        pointBackgroundColor: accentColor,\n        pointBorderWidth: 2,\n        pointHoverRadius: 4,\n        pointHoverBorderWidth: 1,\n        pointRadius: 4,\n        fill: true,\n        borderWidth: 1,\n        data: [80, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155]\n      }]\n    };\n  },\n  options: {\n    maintainAspectRatio: false,\n    legend: {\n      display: false\n    },\n    tooltips: {\n      bodySpacing: 4,\n      mode: \"nearest\",\n      intersect: 0,\n      position: \"nearest\",\n      xPadding: 10,\n      yPadding: 10,\n      caretPadding: 10\n    },\n    responsive: 1,\n    scales: {\n      yAxes: [{\n        gridLines: {\n          color: \"rgba(0, 0, 0, 0.01)\",\n          zeroLineColor: \"transparent\",\n          drawBorder: false\n        }\n      }],\n      xAxes: [{\n        display: 0,\n        ticks: {\n          display: false\n        },\n        gridLines: {\n          color: \"rgba(0, 0, 0, 0.01)\",\n          zeroLineColor: \"transparent\",\n          drawTicks: false,\n          display: false,\n          drawBorder: false\n        }\n      }]\n    },\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }\n    }\n  }\n};\nmodule.exports = {\n  dashboardPanelChart: dashboardPanelChart,\n  // Chart for Dashboard view - Will be rendered in panel\n  dashboardShippedProductsChart: dashboardShippedProductsChart,\n  // Chart for Dashboard view - Shipped Products Card\n  dashboardAllProductsChart: dashboardAllProductsChart,\n  // Chart for Dashboard view - All products Card\n  dashboard24HoursPerformanceChart: dashboard24HoursPerformanceChart // Chart for Dashboard view - 24 Hours Performance Card\n};","map":{"version":3,"names":["primaryColor","accentColor","chartColor","gradientChartOptionsConfiguration","maintainAspectRatio","legend","display","tooltips","bodySpacing","mode","intersect","position","xPadding","yPadding","caretPadding","responsive","scales","yAxes","ticks","gridLines","color","drawBorder","xAxes","zeroLineColor","drawTicks","layout","padding","left","right","top","bottom","gradientChartOptionsConfigurationWithNumbersAndGrid","categoryPercentage","barPercentage","maxBarThickness","dashboardPanelChart","data","canvas","ctx","getContext","gradientStroke","createLinearGradient","addColorStop","gradientFill","labels","datasets","label","borderColor","pointBorderColor","pointBackgroundColor","pointHoverBackgroundColor","pointHoverBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBorderWidth","pointRadius","fill","backgroundColor","borderWidth","options","titleFontColor","bodyFontColor","fillStyle","fontColor","fontStyle","beginAtZero","maxTicksLimit","dashboardShippedProductsChart","dashboardAllProductsChart","dashboard24HoursPerformanceChart","module","exports"],"sources":["D:/FPT/SE-KY7/SWD392/Code template/template/Zest reactjs Package/zestreact-app/src/variables/university/charts.jsx"],"sourcesContent":["// ##############################\r\n// // // Function that converts a hex color number to a RGB color number\r\n// #############################\r\n/*function hexToRGB(hex, alpha) {\r\n    var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n    if (alpha) {\r\n        return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n    } else {\r\n        return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n    }\r\n}*/\r\n\r\n// ##############################\r\n// // // general variables for charts\r\n// #############################\r\nconst primaryColor = \"#26a69a\";\r\nconst accentColor = \"#ff8a65\";\r\nconst chartColor = \"#FFFFFF\";\r\n\r\n// General configuration for the charts with Line gradientStroke\r\nconst gradientChartOptionsConfiguration = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: true\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode:\"nearest\",\r\n      intersect: 0,\r\n      position:\"nearest\",\r\n      xPadding:10,\r\n      yPadding:10,\r\n      caretPadding:10\r\n    },\r\n    responsive: 1,\r\n    scales: {\r\n        yAxes: [{\r\n          display:1,\r\n          ticks: {\r\n              display: true\r\n          },\r\n          gridLines: {\r\n              color: \"rgba(0, 0, 0, 0.01)\",\r\n            \r\n              drawBorder: false\r\n          }\r\n        }],\r\n        xAxes: [{\r\n          display:1,\r\n          ticks: {\r\n              display: true\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: true,\r\n            drawBorder: false\r\n          }\r\n        }]\r\n    },\r\n    layout:{\r\n      padding:{left:0,right:0,top:0,bottom:0}\r\n    }\r\n};\r\n\r\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n        display: false\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode:\"nearest\",\r\n      intersect: 0,\r\n      position:\"nearest\",\r\n      xPadding:10,\r\n      yPadding:10,\r\n      caretPadding:10\r\n    },\r\n    responsive: 1,\r\n    scales: {\r\n        yAxes: [{\r\n                categoryPercentage: 0.8,\r\n                barPercentage: 0.6,\r\n                maxBarThickness: 12,\r\n                display:1,\r\n                gridLines: {\r\n                  color: \"rgba(0, 0, 0, 0.01)\",\r\n                },\r\n                ticks: {\r\n                  display: true\r\n                }\r\n            }],\r\n        xAxes: [{\r\n          display:0,\r\n          ticks: {\r\n              display: false\r\n          },\r\n          gridLines: {\r\n            color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false\r\n          }\r\n        }]\r\n    },\r\n    layout:{\r\n      padding:{left:0,right:0,top:0,bottom:0}\r\n    }\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Panel chart\r\n// #############################\r\n\r\nconst dashboardPanelChart = {\r\n    data: (canvas) => {\r\n        const ctx = canvas.getContext(\"2d\");\r\n        var chartColor = \"#FFFFFF\";\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#80b6f4');\r\n        gradientStroke.addColorStop(1, chartColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\r\n\r\n        return {\r\n            labels: [\"JAN\", \"FEB\", \"MAR\", \"APR\", \"MAY\", \"JUN\", \"JUL\", \"AUG\", \"SEP\", \"OCT\", \"NOV\", \"DEC\"],\r\n            datasets: [{\r\n                label: \"Data\",\r\n                borderColor: chartColor,\r\n                pointBorderColor: chartColor,\r\n                pointBackgroundColor: \"#2c2c2c\",\r\n                pointHoverBackgroundColor: \"#2c2c2c\",\r\n                pointHoverBorderColor: chartColor,\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 7,\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 5,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        layout: {\r\n            padding: {\r\n                left: 20,\r\n                right: 20,\r\n                top: 0,\r\n                bottom: 0\r\n            }\r\n        },\r\n        maintainAspectRatio: false,\r\n        tooltips: {\r\n          backgroundColor: '#fff',\r\n          titleFontColor: '#333',\r\n          bodyFontColor: '#666',\r\n          bodySpacing: 4,\r\n          xPadding: 12,\r\n          mode: \"nearest\",\r\n          intersect: 0,\r\n          position: \"nearest\"\r\n        },\r\n        legend: {\r\n            position: \"bottom\",\r\n            fillStyle: \"#FFF\",\r\n            display: false\r\n        },\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    fontColor: \"rgba(255,255,255,0.4)\",\r\n                    fontStyle: \"bold\",\r\n                    beginAtZero: true,\r\n                    maxTicksLimit: 5,\r\n                    padding: 10\r\n                },\r\n                gridLines: {\r\n                    drawTicks: true,\r\n                    drawBorder: false,\r\n                    display: true,\r\n                    color: \"rgba(255,255,255,0.1)\",\r\n                    zeroLineColor: \"transparent\"\r\n                }\r\n\r\n            }],\r\n            xAxes: [{\r\n                gridLines: {\r\n                    display: false,\r\n                    color: \"rgba(255,255,255,0.1)\",\r\n                },\r\n                ticks: {\r\n                    padding: 10,\r\n                    fontColor: \"rgba(255,255,255,0.4)\",\r\n                    fontStyle: \"bold\"\r\n                }\r\n            }]\r\n        }\r\n    },\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Shipped Products - Card\r\n// #############################\r\n\r\nconst dashboardShippedProductsChart = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, 'rgba(255, 138, 101,1)');\r\n        gradientStroke.addColorStop(1, chartColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(255, 138, 101, 1)\");\r\n        gradientFill.addColorStop(1, \"rgba(255, 138, 101, 1)\");\r\n        return {\r\n            labels: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\r\n            datasets: [{\r\n                label: \"Students\",\r\n                borderColor: \"rgba(255, 138, 101,1)\",\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: \"rgba(255, 138, 101,1)\",\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630]\r\n            }]\r\n        }\r\n    },\r\n    options: gradientChartOptionsConfiguration,\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nconst dashboardAllProductsChart = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n        gradientStroke.addColorStop(0, '#18ce0f');\r\n        gradientStroke.addColorStop(1, primaryColor);\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, \"rgba(233, 30, 99, 0)\");\r\n        gradientFill.addColorStop(1, \"rgba(233, 30, 99, 0)\");\r\n        return {\r\n            labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n            datasets: [{\r\n                label: \"Library Assets\",\r\n                borderColor: primaryColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: primaryColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 6,\r\n                pointHoverBorderWidth: 4,\r\n                pointRadius: 6,\r\n                fill: true,\r\n                backgroundColor: gradientFill,\r\n                borderWidth: 2,\r\n                data: [40, 500, 650, 700, 1200, 1250, 1300, 1900]\r\n            }]\r\n        }\r\n    },\r\n    options: gradientChartOptionsConfigurationWithNumbersAndGrid,\r\n}\r\n\r\n// ##############################\r\n// // // Dashboard view - Bar Chart - Card\r\n// #############################\r\n\r\nconst dashboard24HoursPerformanceChart = {\r\n    data: (canvas) => {\r\n        var ctx = canvas.getContext(\"2d\");\r\n        var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n        gradientFill.addColorStop(0, accentColor);\r\n        gradientFill.addColorStop(1, accentColor);\r\n        return {\r\n            labels :[\r\n                \"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"\r\n            ],\r\n            datasets: [{\r\n                label: \"Professors\",\r\n                backgroundColor: gradientFill,\r\n                borderColor: accentColor,\r\n                pointBorderColor: \"#FFF\",\r\n                pointBackgroundColor: accentColor,\r\n                pointBorderWidth: 2,\r\n                pointHoverRadius: 4,\r\n                pointHoverBorderWidth: 1,\r\n                pointRadius: 4,\r\n                fill: true,\r\n                borderWidth: 1,\r\n                data: [80,99,86,96,123,85,100,75,88,90,123,155]\r\n            }]\r\n        }\r\n    },\r\n    options: {\r\n        maintainAspectRatio: false,\r\n        legend: {\r\n            display: false\r\n        },\r\n        tooltips: {\r\n            bodySpacing: 4,\r\n            mode:\"nearest\",\r\n            intersect: 0,\r\n            position:\"nearest\",\r\n            xPadding:10,\r\n            yPadding:10,\r\n            caretPadding:10\r\n        },\r\n        responsive: 1,\r\n        scales: {\r\n            yAxes: [{\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawBorder: false\r\n                }\r\n            }],\r\n            xAxes: [{\r\n                display:0,\r\n                ticks: {\r\n                    display: false\r\n                },\r\n                gridLines: {\r\n                    color: \"rgba(0, 0, 0, 0.01)\",\r\n            zeroLineColor: \"transparent\",\r\n                    drawTicks: false,\r\n                    display: false,\r\n                    drawBorder: false\r\n                }\r\n            }]\r\n        },\r\n        layout:{\r\n            padding:{left:0,right:0,top:0,bottom:0}\r\n        }\r\n    },\r\n}\r\n\r\nmodule.exports = {\r\n    dashboardPanelChart, // Chart for Dashboard view - Will be rendered in panel\r\n    dashboardShippedProductsChart, // Chart for Dashboard view - Shipped Products Card\r\n    dashboardAllProductsChart, // Chart for Dashboard view - All products Card\r\n    dashboard24HoursPerformanceChart, // Chart for Dashboard view - 24 Hours Performance Card\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAMA,YAAY,GAAG,SAAS;AAC9B,IAAMC,WAAW,GAAG,SAAS;AAC7B,IAAMC,UAAU,GAAG,SAAS;;AAE5B;AACA,IAAMC,iCAAiC,GAAG;EACtCC,mBAAmB,EAAE,KAAK;EAC1BC,MAAM,EAAE;IACJC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAC,SAAS;IACdC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAC,SAAS;IAClBC,QAAQ,EAAC,EAAE;IACXC,QAAQ,EAAC,EAAE;IACXC,YAAY,EAAC;EACf,CAAC;EACDC,UAAU,EAAE,CAAC;EACbC,MAAM,EAAE;IACJC,KAAK,EAAE,CAAC;MACNX,OAAO,EAAC,CAAC;MACTY,KAAK,EAAE;QACHZ,OAAO,EAAE;MACb,CAAC;MACDa,SAAS,EAAE;QACPC,KAAK,EAAE,qBAAqB;QAE5BC,UAAU,EAAE;MAChB;IACF,CAAC,CAAC;IACFC,KAAK,EAAE,CAAC;MACNhB,OAAO,EAAC,CAAC;MACTY,KAAK,EAAE;QACHZ,OAAO,EAAE;MACb,CAAC;MACDa,SAAS,EAAE;QACTC,KAAK,EAAE,qBAAqB;QAC5BG,aAAa,EAAE,aAAa;QAC5BC,SAAS,EAAE,KAAK;QAChBlB,OAAO,EAAE,IAAI;QACbe,UAAU,EAAE;MACd;IACF,CAAC;EACL,CAAC;EACDI,MAAM,EAAC;IACLC,OAAO,EAAC;MAACC,IAAI,EAAC,CAAC;MAACC,KAAK,EAAC,CAAC;MAACC,GAAG,EAAC,CAAC;MAACC,MAAM,EAAC;IAAC;EACxC;AACJ,CAAC;AAED,IAAIC,mDAAmD,GAAG;EACtD3B,mBAAmB,EAAE,KAAK;EAC1BC,MAAM,EAAE;IACJC,OAAO,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAW,EAAE,CAAC;IACdC,IAAI,EAAC,SAAS;IACdC,SAAS,EAAE,CAAC;IACZC,QAAQ,EAAC,SAAS;IAClBC,QAAQ,EAAC,EAAE;IACXC,QAAQ,EAAC,EAAE;IACXC,YAAY,EAAC;EACf,CAAC;EACDC,UAAU,EAAE,CAAC;EACbC,MAAM,EAAE;IACJC,KAAK,EAAE,CAAC;MACAe,kBAAkB,EAAE,GAAG;MACvBC,aAAa,EAAE,GAAG;MAClBC,eAAe,EAAE,EAAE;MACnB5B,OAAO,EAAC,CAAC;MACTa,SAAS,EAAE;QACTC,KAAK,EAAE;MACT,CAAC;MACDF,KAAK,EAAE;QACLZ,OAAO,EAAE;MACX;IACJ,CAAC,CAAC;IACNgB,KAAK,EAAE,CAAC;MACNhB,OAAO,EAAC,CAAC;MACTY,KAAK,EAAE;QACHZ,OAAO,EAAE;MACb,CAAC;MACDa,SAAS,EAAE;QACTC,KAAK,EAAE,qBAAqB;QAC5BG,aAAa,EAAE,aAAa;QAC5BC,SAAS,EAAE,KAAK;QAChBlB,OAAO,EAAE,KAAK;QACde,UAAU,EAAE;MACd;IACF,CAAC;EACL,CAAC;EACDI,MAAM,EAAC;IACLC,OAAO,EAAC;MAACC,IAAI,EAAC,CAAC;MAACC,KAAK,EAAC,CAAC;MAACC,GAAG,EAAC,CAAC;MAACC,MAAM,EAAC;IAAC;EACxC;AACJ,CAAC;;AAED;AACA;AACA;;AAEA,IAAMK,mBAAmB,GAAG;EACxBC,IAAI,EAAE,cAACC,MAAM,EAAK;IACd,IAAMC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACnC,IAAIrC,UAAU,GAAG,SAAS;IAC1B,IAAIsC,cAAc,GAAGF,GAAG,CAACG,oBAAoB,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7DD,cAAc,CAACE,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;IACzCF,cAAc,CAACE,YAAY,CAAC,CAAC,EAAExC,UAAU,CAAC;IAC1C,IAAIyC,YAAY,GAAGL,GAAG,CAACG,oBAAoB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;IAC1DE,YAAY,CAACD,YAAY,CAAC,CAAC,EAAE,wBAAwB,CAAC;IACtDC,YAAY,CAACD,YAAY,CAAC,CAAC,EAAE,2BAA2B,CAAC;IAEzD,OAAO;MACHE,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC5FC,QAAQ,EAAE,CAAC;QACPC,KAAK,EAAE,MAAM;QACbC,WAAW,EAAE7C,UAAU;QACvB8C,gBAAgB,EAAE9C,UAAU;QAC5B+C,oBAAoB,EAAE,SAAS;QAC/BC,yBAAyB,EAAE,SAAS;QACpCC,qBAAqB,EAAEjD,UAAU;QACjCkD,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,qBAAqB,EAAE,CAAC;QACxBC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,eAAe,EAAEd,YAAY;QAC7Be,WAAW,EAAE,CAAC;QACdtB,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;MAClE,CAAC;IACL,CAAC;EACL,CAAC;EACDuB,OAAO,EAAE;IACLlC,MAAM,EAAE;MACJC,OAAO,EAAE;QACLC,IAAI,EAAE,EAAE;QACRC,KAAK,EAAE,EAAE;QACTC,GAAG,EAAE,CAAC;QACNC,MAAM,EAAE;MACZ;IACJ,CAAC;IACD1B,mBAAmB,EAAE,KAAK;IAC1BG,QAAQ,EAAE;MACRkD,eAAe,EAAE,MAAM;MACvBG,cAAc,EAAE,MAAM;MACtBC,aAAa,EAAE,MAAM;MACrBrD,WAAW,EAAE,CAAC;MACdI,QAAQ,EAAE,EAAE;MACZH,IAAI,EAAE,SAAS;MACfC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAE;IACZ,CAAC;IACDN,MAAM,EAAE;MACJM,QAAQ,EAAE,QAAQ;MAClBmD,SAAS,EAAE,MAAM;MACjBxD,OAAO,EAAE;IACb,CAAC;IACDU,MAAM,EAAE;MACJC,KAAK,EAAE,CAAC;QACJC,KAAK,EAAE;UACH6C,SAAS,EAAE,uBAAuB;UAClCC,SAAS,EAAE,MAAM;UACjBC,WAAW,EAAE,IAAI;UACjBC,aAAa,EAAE,CAAC;UAChBxC,OAAO,EAAE;QACb,CAAC;QACDP,SAAS,EAAE;UACPK,SAAS,EAAE,IAAI;UACfH,UAAU,EAAE,KAAK;UACjBf,OAAO,EAAE,IAAI;UACbc,KAAK,EAAE,uBAAuB;UAC9BG,aAAa,EAAE;QACnB;MAEJ,CAAC,CAAC;MACFD,KAAK,EAAE,CAAC;QACJH,SAAS,EAAE;UACPb,OAAO,EAAE,KAAK;UACdc,KAAK,EAAE;QACX,CAAC;QACDF,KAAK,EAAE;UACHQ,OAAO,EAAE,EAAE;UACXqC,SAAS,EAAE,uBAAuB;UAClCC,SAAS,EAAE;QACf;MACJ,CAAC;IACL;EACJ;AACJ,CAAC;;AAED;AACA;AACA;;AAEA,IAAMG,6BAA6B,GAAG;EAClC/B,IAAI,EAAE,cAACC,MAAM,EAAK;IACd,IAAIC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACjC,IAAIC,cAAc,GAAGF,GAAG,CAACG,oBAAoB,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7DD,cAAc,CAACE,YAAY,CAAC,CAAC,EAAE,uBAAuB,CAAC;IACvDF,cAAc,CAACE,YAAY,CAAC,CAAC,EAAExC,UAAU,CAAC;IAC1C,IAAIyC,YAAY,GAAGL,GAAG,CAACG,oBAAoB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;IAC1DE,YAAY,CAACD,YAAY,CAAC,CAAC,EAAE,wBAAwB,CAAC;IACtDC,YAAY,CAACD,YAAY,CAAC,CAAC,EAAE,wBAAwB,CAAC;IACtD,OAAO;MACHE,MAAM,EAAE,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MAC5FC,QAAQ,EAAE,CAAC;QACPC,KAAK,EAAE,UAAU;QACjBC,WAAW,EAAE,uBAAuB;QACpCC,gBAAgB,EAAE,MAAM;QACxBC,oBAAoB,EAAE,uBAAuB;QAC7CG,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,qBAAqB,EAAE,CAAC;QACxBC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,eAAe,EAAEd,YAAY;QAC7Be,WAAW,EAAE,CAAC;QACdtB,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;MACrE,CAAC;IACL,CAAC;EACL,CAAC;EACDuB,OAAO,EAAExD;AACb,CAAC;;AAED;AACA;AACA;;AAEA,IAAMiE,yBAAyB,GAAG;EAC9BhC,IAAI,EAAE,cAACC,MAAM,EAAK;IACd,IAAIC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACjC,IAAIC,cAAc,GAAGF,GAAG,CAACG,oBAAoB,CAAC,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAC7DD,cAAc,CAACE,YAAY,CAAC,CAAC,EAAE,SAAS,CAAC;IACzCF,cAAc,CAACE,YAAY,CAAC,CAAC,EAAE1C,YAAY,CAAC;IAC5C,IAAI2C,YAAY,GAAGL,GAAG,CAACG,oBAAoB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;IAC1DE,YAAY,CAACD,YAAY,CAAC,CAAC,EAAE,sBAAsB,CAAC;IACpDC,YAAY,CAACD,YAAY,CAAC,CAAC,EAAE,sBAAsB,CAAC;IACpD,OAAO;MACHE,MAAM,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;MACnEC,QAAQ,EAAE,CAAC;QACPC,KAAK,EAAE,gBAAgB;QACvBC,WAAW,EAAE/C,YAAY;QACzBgD,gBAAgB,EAAE,MAAM;QACxBC,oBAAoB,EAAEjD,YAAY;QAClCoD,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,qBAAqB,EAAE,CAAC;QACxBC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVC,eAAe,EAAEd,YAAY;QAC7Be,WAAW,EAAE,CAAC;QACdtB,IAAI,EAAE,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;MACpD,CAAC;IACL,CAAC;EACL,CAAC;EACDuB,OAAO,EAAE5B;AACb,CAAC;;AAED;AACA;AACA;;AAEA,IAAMsC,gCAAgC,GAAG;EACrCjC,IAAI,EAAE,cAACC,MAAM,EAAK;IACd,IAAIC,GAAG,GAAGD,MAAM,CAACE,UAAU,CAAC,IAAI,CAAC;IACjC,IAAII,YAAY,GAAGL,GAAG,CAACG,oBAAoB,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;IAC1DE,YAAY,CAACD,YAAY,CAAC,CAAC,EAAEzC,WAAW,CAAC;IACzC0C,YAAY,CAACD,YAAY,CAAC,CAAC,EAAEzC,WAAW,CAAC;IACzC,OAAO;MACH2C,MAAM,EAAE,CACJ,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,EAAC,KAAK,CAC1E;MACDC,QAAQ,EAAE,CAAC;QACPC,KAAK,EAAE,YAAY;QACnBW,eAAe,EAAEd,YAAY;QAC7BI,WAAW,EAAE9C,WAAW;QACxB+C,gBAAgB,EAAE,MAAM;QACxBC,oBAAoB,EAAEhD,WAAW;QACjCmD,gBAAgB,EAAE,CAAC;QACnBC,gBAAgB,EAAE,CAAC;QACnBC,qBAAqB,EAAE,CAAC;QACxBC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE,IAAI;QACVE,WAAW,EAAE,CAAC;QACdtB,IAAI,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,GAAG;MAClD,CAAC;IACL,CAAC;EACL,CAAC;EACDuB,OAAO,EAAE;IACLvD,mBAAmB,EAAE,KAAK;IAC1BC,MAAM,EAAE;MACJC,OAAO,EAAE;IACb,CAAC;IACDC,QAAQ,EAAE;MACNC,WAAW,EAAE,CAAC;MACdC,IAAI,EAAC,SAAS;MACdC,SAAS,EAAE,CAAC;MACZC,QAAQ,EAAC,SAAS;MAClBC,QAAQ,EAAC,EAAE;MACXC,QAAQ,EAAC,EAAE;MACXC,YAAY,EAAC;IACjB,CAAC;IACDC,UAAU,EAAE,CAAC;IACbC,MAAM,EAAE;MACJC,KAAK,EAAE,CAAC;QACJE,SAAS,EAAE;UACPC,KAAK,EAAE,qBAAqB;UACpCG,aAAa,EAAE,aAAa;UACpBF,UAAU,EAAE;QAChB;MACJ,CAAC,CAAC;MACFC,KAAK,EAAE,CAAC;QACJhB,OAAO,EAAC,CAAC;QACTY,KAAK,EAAE;UACHZ,OAAO,EAAE;QACb,CAAC;QACDa,SAAS,EAAE;UACPC,KAAK,EAAE,qBAAqB;UACpCG,aAAa,EAAE,aAAa;UACpBC,SAAS,EAAE,KAAK;UAChBlB,OAAO,EAAE,KAAK;UACde,UAAU,EAAE;QAChB;MACJ,CAAC;IACL,CAAC;IACDI,MAAM,EAAC;MACHC,OAAO,EAAC;QAACC,IAAI,EAAC,CAAC;QAACC,KAAK,EAAC,CAAC;QAACC,GAAG,EAAC,CAAC;QAACC,MAAM,EAAC;MAAC;IAC1C;EACJ;AACJ,CAAC;AAEDwC,MAAM,CAACC,OAAO,GAAG;EACbpC,mBAAmB,EAAnBA,mBAAmB;EAAE;EACrBgC,6BAA6B,EAA7BA,6BAA6B;EAAE;EAC/BC,yBAAyB,EAAzBA,yBAAyB;EAAE;EAC3BC,gCAAgC,EAAhCA,gCAAgC,CAAE;AACtC,CAAC"},"metadata":{},"sourceType":"module"}